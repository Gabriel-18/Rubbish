package 剑指offer;
/*
链接：https://www.nowcoder.com/questionTerminal/bd7f978302044eee894445e244c7eee6?f=discussion
        来源：牛客网

        我画张表如下：

        当 n = 3141592 时:

<thead></thead>
        m	a	b	ones
        1	3141592	0	(3141592+8)/10*1+0=314160
        10	314159	2	(314159+8)/10*10+0=314160
        100	31415	92	(31415+8)/10*100+0=314200
        1000	3141	592	(3141+8)/101000+1(592+1)=314593
        当然后面还有 m=10000,100000,1000000 三种情况，对应着万位，十万位， 百万位为 1 时的情况

        下面说下 a+8 的意义：

        当考虑个位，十位，百位这三位为 1 的情况时：

        个位 2 ，当个位取值 1 时，前面的六位数字可由 0~314159 组成，即 314160 种情况

        十位 9，当十位取值 1 时，前面的五位数字可由 0~31415 组成，十位之后的一位可由 0~9 组成，组合情况 31416*10=314160 种情况

        百位 5，当百位取值为 1 时，前面的四位数字可由 0~3141 组成，百位之后的两位可由 0~99 组成，组合情况为 3142*100=314200 种情况

        注意：当考虑千位 1 时：

        千位 1，千位取值即 1，前面的三位数字可由 0~314 组成，但是当前面的值为 314 时，后面的三位只有 0~592 种情况 (特殊情况)，其余的情况即为前面的值为 0~313, 后面三位有 0~999, 情况数为 3141000，所以总情况数为 3141000 + 593=314593 种情况

        这时可发现和代码中的公式算的情况是吻合的，a+8 的巧妙之处在于当 a 的最后一位 (当前分析位) 为 0 或 1 时，加 8 不产生进位，这是为需要单独算的特殊情况做准备，而当前分析位为 2~9 时，不需要考虑特殊情况，所以允许加 8 产生的进位。*/
public class 从1到n整数中1出现的次数 {
    public int NumberOf1Between1AndN_Solution(int n) {
        int cnt = 0;
        for (int m = 1; m <= n; m *= 10) {
            int a = n / m, b = n % m;
            cnt += (a + 8) / 10 * m + (a % 10 == 1 ? b + 1 : 0);
        }
        return cnt;
    }
}
